@{
    ViewData["Title"] = "Dashboard";
}

<h2>Dashboard</h2>

<p>Latest events (<span id="total"></span>): </p>

<div>
    <table class="table table-striped table-bordered" style="width:100%" id="table">
        <thead>
            <tr>
                <th scope="col">Message</th>
                <th scope="col">Level</th>
                <th scope="col">Hits</th>
                <th scope="col">Users</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.19/css/dataTables.bootstrap4.min.css" />

    <style>

        .flex-container {
            display: flex;
            flex-direction: column;
        }

        .horizontal {
            display: flex;
            flex-direction: row;
        }
    </style>
}

@section Scripts {
    <script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap4.min.js"></script>
    <script src="https://momentjs.com/downloads/moment.min.js"></script>
    <script>
        let table;
        function writeDate(date, text) {
            return '<p data-toggle="tooltip" title="' + moment(date).format('MMMM Do YYYY, h:mm:ss a') + '">' + text + '</p>';
        }

        function formatDate(firstSeen, lastSeen) {
            const age = moment(firstSeen).fromNow();
            const latest = moment(lastSeen).fromNow();
            if (age === latest) {
                return writeDate(firstSeen, age);
            }
            else {
                return writeDate(lastSeen, latest) +
                    '<p>&nbsp;&mdash;&nbsp;</p>' +
                    writeDate(firstSeen, age.split("ago")[0] + ' old');
            }
        }

        function tableLoaded() {
            let total = table.data().count();
            console.log(total);
            $("#total").text(table.data().count());
        }

        $(document).ready(() => {
            table =  $("table").DataTable({
                     ordering: false,
                     order: [[0, '']],
                     ajax: {
                         url: "@Url.Action("GetEventGroups", "Home")",
                         dataSrc: ""
                     },
                     initComplete: tableLoaded,
                     columns: [
                         {
                             data: "message",
                             render: (data, type, group) => {
                                 return `
         <div class="flex-container">
             <div class="horizontal">
                 <a href="#">` + group.type + `</a>
                 <p>&nbsp;&mdash;&nbsp;</p>
                 <p>` + group.rootCause + `</p>
             </div>
             <div>
                 <p>` + group.message + `</p>
             </div>
             <div class="horizontal">
                ` + formatDate(group.firstSeen, group.lastSeen) + `
             </div>
         </div>
         `;
                        }
                    },
                    { data: "level" },
                    { data: "hits" },
                    { data: "users" }
                ]
            });
        });
    </script>
}